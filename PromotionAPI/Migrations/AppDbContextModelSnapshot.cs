// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PromotionAPI.Services;

#nullable disable

namespace PromotionAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PromotionAPI.Models.Promotion", b =>
                {
                    b.Property<string>("PromotionId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PromoType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric");

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PromotionId");

                    b.ToTable("Promotion", "dbo");
                });

            modelBuilder.Entity("PromotionAPI.Models.RelPromotionStore", b =>
                {
                    b.Property<string>("PromotionId")
                        .HasColumnType("text")
                        .HasColumnOrder(0);

                    b.Property<string>("StoreId")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.HasKey("PromotionId", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("RelPromotionStore", "dbo");
                });

            modelBuilder.Entity("PromotionAPI.Models.Store", b =>
                {
                    b.Property<string>("StoreId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("StoreId");

                    b.ToTable("Store", "dbo");

                    b.HasData(
                        new
                        {
                            StoreId = "111",
                            Name = "Toko Jakarta"
                        },
                        new
                        {
                            StoreId = "222",
                            Name = "Toko Tangerang"
                        },
                        new
                        {
                            StoreId = "333",
                            Name = "Toko Bogor"
                        },
                        new
                        {
                            StoreId = "444",
                            Name = "Toko Bandung"
                        });
                });

            modelBuilder.Entity("PromotionAPI.Models.RelPromotionStore", b =>
                {
                    b.HasOne("PromotionAPI.Models.Promotion", "Promotion")
                        .WithMany("RelPromotionStores")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PromotionAPI.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("PromotionAPI.Models.Promotion", b =>
                {
                    b.Navigation("RelPromotionStores");
                });
#pragma warning restore 612, 618
        }
    }
}
